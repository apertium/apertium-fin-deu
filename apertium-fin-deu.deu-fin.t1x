<?xml version="1.0" encoding="UTF-8"?>
<transfer default="chunk">

  <!-- {{{ cats -->
  <section-def-cats>
    <!-- {{{ hacks -->
    <def-cat n="desomalieren2np">
      <cat-item lemma="somalieren" tags="vblex.*"/>
    </def-cat>
    <def-cat n="deadp2np">
      <cat-item lemma="de" tags="pr.*"/>
    </def-cat>
    <def-cat n="dest2np">
      <cat-item lemma="st." tags="abbr"/>
    </def-cat>
    <def-cat n="soviele2np">
      <cat-item lemma="so viele" tags="det.*"/>
    </def-cat>
    <def-cat n="ex2np">
      <cat-item lemma="ex" tags="adv"/>
    </def-cat>
    <def-cat n="nochein2np">
      <cat-item lemma="noch ein" tags="det.*"/>
    </def-cat>
    <!-- }}}
         {{{ words -->
    <def-cat n="um">
      <cat-item lemma="um" tags="cnjsub"/>
      <cat-item lemma="um" tags="pr.*"/>
      <cat-item lemma="um" tags="pr.acc"/>
    </def-cat>
    <def-cat n="seit">
      <cat-item lemma="seit" tags="pr.*"/>
      <cat-item lemma="seit" tags="pr.dat"/>
      <cat-item lemma="seit" tags="cnjsub"/> <!-- XXX: bad disam -->
    </def-cat>
    <def-cat n="bevor">
      <cat-item lemma="bevor" tags="preadv"/>
    </def-cat>
    <def-cat n="an">
      <cat-item lemma="an" tags="pr.*"/>
      <cat-item lemma="an" tags="pr.dat"/>
    </def-cat>
    <def-cat n="ab">
      <cat-item lemma="ab" tags="adv"/> <!-- XXX: bad disam -->
      <cat-item lemma="ab" tags="pr.*"/>
    </def-cat>
    <def-cat n="bis">
      <cat-item lemma="bis" tags="cnjsub"/> <!-- XXX: bad disam -->
      <cat-item lemma="bis" tags="pr.*"/>
    </def-cat>
    <def-cat n="gegen">
      <cat-item lemma="gegen" tags="pr.*"/>
      <cat-item lemma="gegen" tags="pr.acc"/>
    </def-cat>
    <def-cat n="uhr">
      <cat-item lemma="Uhr" tags="n.*"/>
      <cat-item lemma="uhr" tags="n.*"/>
    </def-cat>
    <def-cat n="über">
      <cat-item lemma="über" tags="pr.*"/>
      <cat-item lemma="über" tags="adv"/> <!-- XXX: bad disam -->
    </def-cat>
    <def-cat n="nach">
      <cat-item lemma="nach" tags="pr.*"/>
      <cat-item lemma="nach" tags="adv"/> <!-- XXX: bad disam -->
      <cat-item lemma="nach" tags="pprep.*"/> <!-- XXX: bad disam -->
    </def-cat>
    <def-cat n="hinweg">
      <cat-item lemma="hinweg" tags="adv"/>
    </def-cat>
    <def-cat n="leben">
      <cat-item lemma="Leben" tags="n.nt.*"/>
      <!-- lower-case strings waiting for bug fix -->
      <cat-item lemma="leben" tags="n.nt.*"/>
    </def-cat>
    <def-cat n="gekommen">
      <cat-item lemma="kommen" tags="vblex.pp"/>
    </def-cat>
    <def-cat n="monat">
      <cat-item lemma="Januar" tags="n.*"/>
      <cat-item lemma="Februar" tags="n.*"/>
      <cat-item lemma="März" tags="n.*"/>
      <cat-item lemma="April" tags="n.*"/>
      <cat-item lemma="Mai" tags="np.*"/>
      <cat-item lemma="mai" tags="n.*"/>
      <cat-item lemma="Juni" tags="n.*"/>
      <cat-item lemma="Juli" tags="n.*"/>
      <cat-item lemma="August" tags="n.*"/>
      <cat-item lemma="September" tags="n.*"/>
      <cat-item lemma="Oktober" tags="n.*"/>
      <cat-item lemma="November" tags="n.*"/>
      <cat-item lemma="Dezember" tags="n.*"/>
      <!-- lower-case strings waiting for bug fix -->
      <cat-item lemma="januar" tags="n.*"/>
      <cat-item lemma="februar" tags="n.*"/>
      <cat-item lemma="märz" tags="n.*"/>
      <cat-item lemma="april" tags="n.*"/>
      <cat-item lemma="mai" tags="np.*"/>
      <cat-item lemma="juni" tags="n.*"/>
      <cat-item lemma="juli" tags="n.*"/>
      <cat-item lemma="august" tags="n.*"/>
      <cat-item lemma="september" tags="n.*"/>
      <cat-item lemma="oktober" tags="n.*"/>
      <cat-item lemma="november" tags="n.*"/>
      <cat-item lemma="dezember" tags="n.*"/>
    </def-cat>
    <def-cat n="zeitwort">
      <cat-item lemma="Jahr" tags="n.*"/>
      <cat-item lemma="Jahrzehnt" tags="n.*"/>
      <!-- lower-case strings waiting for bug fix -->
      <cat-item lemma="jahr" tags="n.*"/>
      <cat-item lemma="jahrzehnt" tags="n.*"/>
    </def-cat>
    <def-cat n="informationwort">
      <cat-item lemma="Angabe" tags="n.*"/>
      <cat-item lemma="Ansicht" tags="n.*"/>
      <!-- lower-case strings waiting for bug fix -->
      <cat-item lemma="angabe" tags="n.*"/>
      <cat-item lemma="ansicht" tags="n.*"/>
    </def-cat>
    <def-cat n="weder_cc">
      <cat-item lemma="weder" tags="cnjcoo"/>
    </def-cat>
    <def-cat n="noch_cc">
      <cat-item lemma="noch" tags="cnjcoo"/>
      <cat-item lemma="noch" tags="adv"/> <!-- XXX: bad disam -->
    </def-cat>
    <def-cat n="werden">
      <cat-item lemma="werden" tags="vaux.*"/>
      <cat-item lemma="werden" tags="vblex.*"/> <!-- XXX: also not aux? -->
    </def-cat>
    <def-cat n="als">
      <cat-item lemma="als" tags="adv"/>
      <cat-item lemma="als" tags="cnjadv"/> <!-- XXX: also not cnjadv? -->
    </def-cat>
    <def-cat n="wie">
      <cat-item lemma="wie" tags="adv"/>
      <cat-item lemma="wie" tags="adv.itg"/>
    </def-cat>
    <def-cat n="gehen">
      <cat-item lemma="gehen" tags="vblex.pri.p2.pl"/>
      <cat-item lemma="gehen" tags="vblex.pri.p3.sg"/>
      <cat-item lemma="gehen" tags="vblex.prs.p3.sg"/>
    </def-cat>
    <def-cat n="es">
      <cat-item lemma="es" tags="prn.pers.p3.nt.sg.*"/>
      <cat-item lemma="prpers" tags="prn.*.p3.nt.sg.*"/>
    </def-cat>
    <!-- }}}
         {{{ poses, groups etc. -->
    <def-cat n="daynumber">
      <cat-item tags="num.ord"/>
    </def-cat>
    <def-cat n="noun">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="cmp">
      <cat-item tags="n.*.cmp"/>
      <cat-item tags="n.*.cmp.*"/>
      <cat-item tags="atp.cmp"/>
    </def-cat>
    <def-cat n="prn">
      <cat-item tags="prn.*"/>
    </def-cat>
    <def-cat n="prnpers">
      <cat-item tags="prn.pers.*"/>
    </def-cat>
    <def-cat n="prndem">
      <cat-item tags="prn.dem.*"/>
    </def-cat>
    <def-cat n="np">
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="nominal">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
      <cat-item tags="prn.pers.*"/> <!-- XXX: all prn will catch ART/PRN problrms -->
    </def-cat>
    <def-cat n="verbnegation">
      <cat-item lemma="nicht" tags="adv"/>
      <cat-item lemma="kein" tags="adv"/>
    </def-cat>
    <def-cat n="infinite">
      <cat-item tags="vblex.inf"/>
      <cat-item tags="vblex.ger.*"/>
      <cat-item tags="vaux.inf"/>
      <cat-item tags="vbser.inf"/>
      <cat-item tags="vbhaver.inf"/>
    </def-cat>
    <def-cat n="perfection">
      <cat-item tags="vblex.*.pp"/>
      <cat-item tags="vblex.pp"/>
    </def-cat>
    <def-cat n="participle">
      <cat-item tags="vblex.*.pp"/>
      <cat-item tags="vblex.pp"/>
    </def-cat>
    <def-cat n="haver">
      <cat-item tags="vbhaver.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="adjvl">
      <cat-item tags="adj.*"/>
      <cat-item tags="vblex.*.pp"/>
    </def-cat>
    <def-cat n="adp">
      <cat-item tags="post.*"/>
      <cat-item tags="pr.*"/>
      <cat-item tags="post"/>
      <cat-item tags="pr"/>
    </def-cat>
    <def-cat n="poss">
      <cat-item tags="det.pos.*"/>
    </def-cat>
    <def-cat n="art">
      <cat-item lemma="der" tags="det.*"/>
      <cat-item lemma="ein" tags="det.*"/>
    </def-cat>
    <def-cat n="det">
      <cat-item tags="det.*"/>
    </def-cat>
    <def-cat n="cardinal">
      <cat-item tags="num.card"/>
      <cat-item tags="num.card.*"/>
      <cat-item tags="num.pl.*"/>
      <cat-item tags="num"/>
    </def-cat>
    <def-cat n="plural">
      <cat-item tags="n.*.pl.*"/>
      <cat-item tags="np.*.pl.*"/>
      <cat-item tags="prn.*.pl.*"/>
    </def-cat>
    <def-cat n="num">
      <cat-item tags="num.*"/>
      <cat-item tags="num"/>
    </def-cat>
    <def-cat n="multiplier">
      <cat-item tags="num.card"/>
      <cat-item tags="num.card.*"/>
      <cat-item tags="num.pl.*"/>
      <cat-item tags="num"/>
      <cat-item lemma="Milliarde" tags="n.*"/>
      <cat-item lemma="Hundert" tags="n.*"/>
    </def-cat>
    <def-cat n="verb">
      <cat-item tags="vblex.*"/>
      <cat-item tags="vbser.*"/>
      <cat-item tags="vbmod.*"/>
      <cat-item tags="vaux.*"/>
      <cat-item tags="vbhaver.*"/>
    </def-cat>
    <def-cat n="auxiliary">
      <cat-item tags="vbmod.*"/>
      <cat-item tags="vaux.*"/>
    </def-cat>
    <def-cat n="cnjcoo">
      <cat-item tags="cnjcoo"/>
    </def-cat>
    <def-cat n="comma">
      <cat-item lemma="," tags="cm"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>
    <!-- }}} -->
  </section-def-cats>
  <!-- }}}
  {{{ attrs -->
  <section-def-attrs>
    <def-attr n="a_case">
      <attr-item tags="nom"/>
      <attr-item tags="gen"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="ine"/>
      <attr-item tags="ela"/>
      <attr-item tags="ill"/>
      <attr-item tags="ade"/>
      <attr-item tags="abl"/>
      <attr-item tags="all"/>
      <attr-item tags="par"/>
      <attr-item tags="tra"/>
      <attr-item tags="cmp"/>
      <attr-item tags="lat"/>
    </def-attr>
    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vblex.neg"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="vaux"/>
    </def-attr>
    <def-attr n="a_tense">
      <attr-item tags="prs"/>
      <attr-item tags="pis"/>
      <attr-item tags="pri"/>
      <attr-item tags="pii"/>
      <attr-item tags="past"/>
    </def-attr>
    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="num.ord"/>
    </def-attr>
    <def-attr n="a_comp">
      <attr-item tags="pos"/>
      <attr-item tags="comp"/>
      <attr-item tags="sup"/>
    </def-attr>
    <def-attr n="a_adp">
      <attr-item tags="post"/>
      <attr-item tags="pr"/>
    </def-attr>
    <def-attr n="a_adv">
      <attr-item tags="adv"/>
    </def-attr>
    <def-attr n="a_noun">
      <attr-item tags="n"/>
      <attr-item tags="n.acr"/>
      <attr-item tags="n.compound-only-L"/>
      <attr-item tags="det"/>
      <attr-item tags="np.ant.m"/>
      <attr-item tags="np.ant.f"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.top.use_blacklist"/>
      <attr-item tags="np.al"/>
      <attr-item tags="np"/>
      <attr-item tags="np.acr"/>
      <attr-item tags="np.acr.al"/>
      <attr-item tags="np.top.acr"/>
      <attr-item tags="np.al.acr"/>
      <attr-item tags="np.org"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="num.card"/>
      <attr-item tags="prn"/>
    </def-attr>
    <def-attr n="a_nominal">
      <attr-item tags="n.acr"/>
      <attr-item tags="n.compound-only-L"/>
      <attr-item tags="n"/>
      <attr-item tags="np.ant.m"/>
      <attr-item tags="np.ant.f"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.top.use_blacklist"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.org"/>
      <attr-item tags="np.al"/>
      <attr-item tags="np"/>
      <attr-item tags="np.acr"/>
      <attr-item tags="np.acr.al"/>
      <attr-item tags="np.top.acr"/>
      <attr-item tags="np.al.acr"/>
      <attr-item tags="num.card"/>
      <attr-item tags="det"/>
      <attr-item tags="prn"/>
      <attr-item tags="adj.pos"/>
    </def-attr>
    <def-attr n="a_det">
      <attr-item tags="n"/>
      <attr-item tags="num.card"/>
      <attr-item tags="det"/>
      <attr-item tags="prn"/>
      <attr-item tags="adj.pos"/>
      <attr-item tags="adv"/>
    </def-attr>
    <def-attr n="a_prn">
      <attr-item tags="prn"/>
    </def-attr>
    <def-attr n="a_number">
      <attr-item tags="sg"/>
      <attr-item tags="sp"/>
      <attr-item tags="pl"/>
    </def-attr>
    <def-attr n="a_perf">
      <attr-item tags="pp"/>
    </def-attr>
    <def-attr n="a_pers">
      <attr-item tags="p1.sg"/>
      <attr-item tags="p2.sg"/>
      <attr-item tags="p3.sg"/>
      <attr-item tags="p1.pl"/>
      <attr-item tags="p2.pl"/>
      <attr-item tags="p3.pl"/>
    </def-attr>
    <def-attr n="a_numtype">
      <attr-item tags="card"/>
      <attr-item tags="nocard"/>
      <attr-item tags="ord"/>
    </def-attr>
    <def-attr n="a_num">
      <attr-item tags="num"/>
      <attr-item tags="num.use_nonstd"/>
    </def-attr>
    <def-attr n="a_inf">
      <attr-item tags="inf"/>
      <attr-item tags="infa"/>
      <attr-item tags="infe"/>
      <attr-item tags="infma"/>
      <attr-item tags="ger"/>
    </def-attr>
    <def-attr n="a_conneg">
      <attr-item tags="conneg"/>
    </def-attr>
  </section-def-attrs>
  <!-- }}}
        {{{ vars -->
  <section-def-vars>
    <def-var n="possess"/>
    <def-var n="pers"/>
    <def-var n="number"/>
    <def-var n="voice"/>
    <def-var n="case"/>
    <def-var n="tense"/>
    <def-var n="adpcase"/>
    <def-var n="prnmaybe"/>
    <def-var n="adpmaybe"/>
    <def-var n="numtype"/>
    <def-var n="comparison"/>
    <def-var n="compstuff"/>
  </section-def-vars>
  <!-- }}}
        {{{ macros -->
  <section-def-macros>
    <def-macro n="test" npar="1">
      <let>
        <var n="number"/>
        <lit v=""/>
      </let>
    </def-macro>
    <def-macro n="comparison-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_adj"/><lit-tag v="num.ord"/></equal>
          </test>
          <let>
            <var n="comparison"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_comp"/><lit-tag v="comp"/></equal>
          </test>
          <let>
            <var n="comparison"/><lit-tag v="com"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_comp"/><lit-tag v="sup"/></equal>
          </test>
          <let>
            <var n="comparison"/><lit-tag v="sup"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="comparison"/><lit-tag v="pos"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="voice-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_voice"/><lit-tag v="actv"/></equal>
          </test>
          <let>
            <var n="voice"/><lit-tag v="actv"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_voice"/><lit-tag v="pasv"/></equal>
          </test>
          <let>
            <var n="voice"/><lit-tag v="pasv"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="voice"/><lit-tag v="actv"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="number-mangler" npar="1">
      <choose>
        <!-- special -->
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="tl" part="a_number"/><lit-tag v="sp"/></equal>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/></equal>
              <equal><clip pos="1" side="tl" part="lem"/><lit v="kaikki"/></equal>
            </and>
          </test>
          <let>
            <var n="number"/><lit-tag v="sp"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="tl" part="a_number"/><lit-tag v="sp"/></equal>
              <equal><clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/></equal>
              <equal><clip pos="1" side="tl" part="lem"/><lit v="mikä"/></equal>
            </and>
          </test>
          <let>
            <var n="number"/><lit-tag v="sp"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="lem"/><lit v="koko"/></equal>
          </test>
          <let>
            <var n="number"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><var n="tense"/><lit-tag v="pri"/></equal>
              <equal><clip pos="1" side="tl" part="a_conneg"/><lit-tag v="conneg"/></equal>
            </and>
          </test>
          <let>
            <var n="number"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_nominal"/><lit-tag v="n.compound-only-L"/></equal>
          </test>
          <let>
            <var n="number"/><lit v=""/>
          </let>
        </when>
        <!-- regular -->
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_number"/><lit-tag v="sg"/></equal>
          </test>
          <let>
            <var n="number"/><lit-tag v="sg"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_number"/><lit-tag v="pl"/></equal>
          </test>
          <let>
            <var n="number"/><lit-tag v="pl"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="number"/><lit-tag v="sg"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="numtype-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_numtype"/><lit-tag v="card"/></equal>
          </test>
          <let>
            <var n="numtype"/><lit-tag v="card"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_numtype"/><lit-tag v="ord"/></equal>
          </test>
          <let>
            <var n="numtype"/><lit-tag v="ord"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_numtype"/><lit-tag v="nocard"/></equal>
          </test>
          <let>
            <var n="numtype"/><lit v=""/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="numtype"/><lit-tag v="card"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="tensemood-mangler" npar="1">
      <choose>
        <when>
          <!-- negation verb is underspecified time -->
          <test>
            <equal><clip pos="1" side="tl" part="lem"/><lit v="ei"/></equal>
          </test>
          <let>
            <var n="tense"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pii"/></equal>
          </test>
          <let>
            <var n="tense"/><lit-tag v="past"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="prs"/></equal>
          </test>
          <let>
            <var n="tense"/><lit-tag v="pri"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="pis"/></equal>
          </test>
          <let>
            <var n="tense"/><lit-tag v="pri"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="past"/></equal>
          </test>
          <let>
            <var n="tense"/><lit-tag v="past"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="tense"/><lit-tag v="pri"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="pers-mangler" npar="1">
      <choose>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1.sg"/></equal>
          </test>
          <let>
            <var n="pers"/><lit-tag v="p1.sg"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2.sg"/></equal>
          </test>
          <let>
            <var n="pers"/><lit-tag v="p2.sg"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3.sg"/></equal>
          </test>
          <let>
            <var n="pers"/><lit-tag v="p3.sg"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p1.pl"/></equal>
          </test>
          <let>
            <var n="pers"/><lit-tag v="p1.pl"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p2.pl"/></equal>
          </test>
          <let>
            <var n="pers"/><lit-tag v="p2.pl"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_pers"/><lit-tag v="p3.pl"/></equal>
          </test>
          <let>
            <var n="pers"/><lit-tag v="p3.pl"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="pers"/><lit-tag v="p3.sg"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="case-mangler" npar="1">
      <choose>
        <when>
          <!-- special cases (pun!) -->
          <test>
            <equal><clip pos="1" side="tl" part="lem"/><lit v="koko"/></equal>
          </test>
          <let>
            <var n="case"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_nominal"/><lit-tag v="n.compound-only-L"/></equal>
          </test>
          <let>
            <var n="case"/><lit v=""/>
          </let>
        </when>
        <!-- case mappigngs -->
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="gen"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="dat"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="gen"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="cmp"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="nom"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="gen"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="gen"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="gen"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_case"/><lit v=""/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="nom"/>
          </let>
        </when>
        <!-- otherwise, nom -->
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="a_case"/><lit-tag v="nom"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="nom"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="infinite-mangler" npar="1">
      <choose>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_inf"/><lit-tag v="inf"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_inf"/><lit-tag v="infa"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="lat"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="a_inf"/><lit-tag v="ger"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_inf"/><lit-tag v="infma"/>
          </let>
          <let>
            <var n="case"/><lit-tag v="ine"/>
          </let>
        </when>
        <!-- otherwise, same case -->
      </choose>
    </def-macro>
    <def-macro n="possessive-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="mein"/></equal>
          </test>
          <let>
            <var n="prnmaybe"/><lit v=""/>
          </let>
          <let>
            <var n="poss"/><lit-tag v="pxsg1"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="dein"/></equal>
          </test>
          <let>
            <var n="poss"/><lit-tag v="pxsg2"/>
          </let>
          <let>
            <var n="prnmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="eure"/></equal>
          </test>
          <let>
            <var n="poss"/><lit-tag v="pxsg2"/>
          </let>
          <let>
            <var n="prnmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="unser"/></equal>
          </test>
          <let>
            <var n="poss"/><lit-tag v="pxsg1"/>
          </let>
          <let>
            <var n="prnmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="lem"/><lit v="sein"/></equal>
          </test>
          <let>
            <var n="poss"/><lit-tag v="pxsp3"/>
          </let>
          <let>
            <var n="prnmaybe"/><concat><lit v="hän"/><lit-tag v="prn.pers.sg.gen"/></concat>
          </let>
        </when>
        <!-- otherwise, clip adp and gen -->
        <otherwise>
          <let>
            <var n="poss"/><lit-tag v="pxsp3"/>
          </let>
          <let>
            <var n="prnmaybe"/><clip pos="1" side="tl" part="whole"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="adp-mangler" npar="1">
      <choose>
        <when>
          <test>
            <and>
              <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="in"/></equal>
              <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="dat"/></equal>
            </and>
          </test>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
          <let>
            <var n="adpcase"/><lit-tag v="ine"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="ab"/></equal>
              <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="dat"/></equal>
            </and>
          </test>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
          <let>
            <var n="adpcase"/><lit-tag v="abl"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="in"/></equal>
              <equal><clip pos="1" side="sl" part="a_case"/><lit-tag v="acc"/></equal>
            </and>
          </test>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
          <let>
            <var n="adpcase"/><lit-tag v="ill"/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="auf"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ine"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="um"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="abl"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="aus"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ela"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="über"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ela"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="bei"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ade"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="von"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ela"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="bis"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ill"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="als"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ess"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="mit"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ade"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="zu"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="tra"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="an"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="abl"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="nach"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="ill"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="ohne"/></equal>
          </test>
          <let>
            <var n="adpcase"/><lit-tag v="abe"/>
          </let>
          <let>
            <var n="adpmaybe"/><lit v=""/>
          </let>
        </when>
        <!-- otherwise, clip adp and gen -->
        <otherwise>
          <let>
            <var n="adpcase"/><lit-tag v="gen"/>
          </let>
          <let>
            <var n="adpmaybe"/><clip pos="1" side="tl" part="whole"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="compstuff-mangler" npar="1">
      <choose>
        <!-- special -->
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_nominal"/><lit-tag v="n.compound-only-L"/></equal>
          </test>
          <let>
            <var n="compstuff"/><lit-tag v="cmp"/>
          </let>
        </when>
        <when>
          <test>
            <or>
             <equal><clip pos="1" side="tl" part="lem"/><lit v="yhteis"/></equal>
             <equal><clip pos="1" side="tl" part="lem"/><lit v="lähi"/></equal>
           </or>
          </test>
          <let>
            <var n="compstuff"/><lit-tag v="compound-only-L"/>
          </let>
        </when>
        <!-- regular -->
        <otherwise>
          <let>
            <var n="compstuff"/><lit-tag v="sg.gen"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
    <def-macro n="conneg-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="a_tense"/><lit-tag v="prs"/></equal>
          </test>
          <let>
            <!-- XXX: sp-->
            <var n="number"/><lit v=""/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_number"/><lit-tag v="sg"/></equal>
          </test>
          <let>
            <var n="number"/><lit-tag v="sg"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="tl" part="a_number"/><lit-tag v="pl"/></equal>
          </test>
          <let>
            <var n="number"/><lit-tag v="pl"/>
          </let>
        </when>
        <otherwise>
          <let>
            <!-- XXX: sp -->
            <var n="number"/><lit v=""/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
  </section-def-macros>
  <!-- }}}
       {{{ rules -->
  <section-rules>

    <!-- }}}
         {{{ rules per lexeme for special brokenness -->
    <rule comment="ex2np: totally broken deu analysis of 'de'">
      <pattern>
        <pattern-item n="ex2np"/>
      </pattern>
      <action>
        <out>
          <chunk name="ex2NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP.SG.NOM"/></tag>
            </tags>
            <lu>
              <lit v="ex"/>
              <lit-tag v="n.sg.nom"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="nochein2np: totally broken deu analysis of 'de'">
      <pattern>
        <pattern-item n="nochein2np"/>
      </pattern>
      <action>
        <out>
          <chunk name="nochein2NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ADV"/></tag>
            </tags>
            <lu>
              <lit v="yhä"/>
              <lit-tag v="adv"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="soviele2np: totally broken deu analysis of 'de'">
      <pattern>
        <pattern-item n="soviele2np"/>
      </pattern>
      <action>
        <out>
          <chunk name="soviele2NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP.SG.NOM"/></tag>
            </tags>
            <lu>
              <lit v="yhtä"/>
              <lit-tag v="adv"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="paljon"/>
              <lit-tag v="adv"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="desomalieren2np: totally broken deu analysis of 'de'">
      <pattern>
        <pattern-item n="desomalieren2np"/>
      </pattern>
      <action>
        <out>
          <chunk name="DESOMALIEREN2NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP.PL.NOM"/></tag>
            </tags>
            <lu>
              <lit v="somali"/>
              <lit-tag v="n.pl.gen"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="deadp2np: totally broken deu analysis of 'de'">
      <pattern>
        <pattern-item n="deadp2np"/>
      </pattern>
      <action>
        <out>
          <chunk name="DEADP2NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP.SG.NOM"/></tag>
            </tags>
            <lu>
              <lit v="de"/>
              <lit-tag v="np.cog.sg.nom"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="dest2np: St. mismatched">
      <pattern>
        <pattern-item n="dest2np"/>
      </pattern>
      <action>
        <out>
          <chunk name="DEST2NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP.SG.NOM"/></tag>
            </tags>
            <lu>
              <lit v="St."/>
              <lit-tag v="np.sg.nom"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <!-- }}}
         {{{ rules for idioms and fixed expressions -->
    <rule comment="weder adj noch adj: negv adj cnjcoo+negv adj">
      <pattern>
        <pattern-item n="weder_cc"/>
        <pattern-item n="adj"/>
        <pattern-item n="noch_cc"/>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="AP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="CC"/></tag>
            </tags>
            <lu>
              <lit v="ei"/>
              <lit-tag v="vblex.neg.actv.p3.sg"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="2"/>
            <lu>
              <lit v="ei"/>
              <lit-tag v="vblex.neg.actv.p3.sg"/>
              <lit v="+ka"/>
              <lit-tag v="enc"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="seit ZEIT bevor: AIKOIHIN">
      <pattern>
        <pattern-item n="seit"/>
        <pattern-item n="zeitwort"/>
        <pattern-item n="bevor"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="AdvP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="ADV"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>    <!-- Jahr ~ vuosi -->
              <clip pos="2" side="tl" part="a_noun"/> <!-- n -->
              <var n="number"/>                       <!-- sg / pl -->
              <lit-tag v="ill"/>                      <!-- ill -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="über ZEIT hinweg: AJAN mittaan">
      <pattern>
        <pattern-item n="über"/>
        <pattern-item n="zeitwort"/>
        <pattern-item n="hinweg"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="AdvP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="ADV"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>    <!-- Jahr ~ vuosi -->
              <clip pos="2" side="tl" part="a_noun"/> <!-- n -->
              <var n="number"/>                       <!-- sg / pl -->
              <lit-tag v="gen"/>                      <!-- gen -->
            </lu>
            <b pos="2"/>
            <lu>
              <lit v="mittaan"/>
              <lit-tag v="adv"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="nach INFORMATION: TIETOLÄHTEEN mukaan">
      <pattern>
        <pattern-item n="nach"/>
        <pattern-item n="informationwort"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="AdvP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="ADV"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>    <!-- Angabe ~ tieto -->
              <clip pos="2" side="tl" part="a_noun"/> <!-- n -->
              <var n="number"/>                       <!-- sg / pl -->
              <lit-tag v="gen"/>                      <!-- gen -->
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="mukaan"/>
              <lit-tag v="post"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="um N.NN uhr: kello N.NN">
      <pattern>
        <pattern-item n="um"/>
        <pattern-item n="num"/>
        <pattern-item n="uhr"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="UhrP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="UHR"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/> <!-- Uhr -> kello -->
              <clip pos="3" side="tl" part="a_nominal"/>
              <lit-tag v="sg.nom"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- 12.34 -->
              <clip pos="2" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="um leben gekommen: kuolla">
      <pattern>
        <pattern-item n="um"/>
        <pattern-item n="det"/>
        <pattern-item n="leben"/>
        <pattern-item n="gekommen"/>
      </pattern>
      <action>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="dead.becoming"/></tag>
            </tags>
            <lu>
              <lit v="kuolla"/>
              <lit-tag v="vblex.actv.pp.pos.nom.sg"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="gegen N.NN uhr: suunnilleen kello N.NN">
      <pattern>
        <pattern-item n="gegen"/>
        <pattern-item n="num"/>
        <pattern-item n="uhr"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="UhrP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="UHR"/></tag>
            </tags>
            <lu>
              <lit v="suunnilleen"/>
              <lit-tag v="post"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/> <!-- Uhr -> kello -->
              <clip pos="3" side="tl" part="a_nominal"/>
              <lit-tag v="sg.nom"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- 12.34 -->
              <clip pos="2" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="am NN. Monat: NN. kuuta">
      <pattern>
        <pattern-item n="an"/>
        <pattern-item n="art"/>
        <pattern-item n="daynumber"/>
        <pattern-item n="monat"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="MonatP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="MONAT"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/> <!-- 21. -> 21. -->
              <clip pos="3" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <lit-tag v="ess"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/> <!-- März -> tammikuuta-->
              <clip pos="4" side="tl" part="a_nominal"/>
              <lit-tag v="sg.par"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="NN. Monat: NN. kuuta">
      <pattern>
        <pattern-item n="daynumber"/>
        <pattern-item n="monat"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="MonatP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="MONAT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- 21. -> 21. -->
              <clip pos="1" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- März -> tammikuuta-->
              <clip pos="2" side="tl" part="a_nominal"/>
              <lit-tag v="sg.par"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="N.NN uhr: kello N.NN">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="uhr"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="UhrP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="UHR"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- Uhr -> kello -->
              <clip pos="2" side="tl" part="a_nominal"/>
              <lit-tag v="sg.nom"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- 12.34 -->
              <clip pos="1" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="wie geht es: how goes">
      <pattern>
        <pattern-item n="wie"/>
        <pattern-item n="gehen"/>
        <pattern-item n="es"/>
      </pattern>
      <action>
        <call-macro n="infinite-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="ADE"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- wie -> miten -->
              <clip pos="1" side="tl" part="a_adv"/> <!-- adv -->
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="mennä"/> <!-- gehen -> menee -->
              <clip pos="2" side="tl" part="a_verb"/> <!-- vblex -->
              <lit-tag v="actv"/> <!-- 0 -> pasv -->
              <var n="tense"/> <!-- pri -->
              <lit-tag v="p3.sg"/> <!-- * -> p3.sg -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="NP geht es: adessive goes">
      <pattern>
        <pattern-item n="nominal"/>
        <pattern-item n="gehen"/>
        <pattern-item n="es"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="infinite-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="ADE"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- hund -> koira -->
              <clip pos="1" side="tl" part="a_nominal"/> <!-- n -->
              <var n="number"/>
              <lit-tag v="ade"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="mennä"/> <!-- gehen -> menee -->
              <clip pos="2" side="tl" part="a_verb"/> <!-- vblex -->
              <lit-tag v="actv"/> <!-- 0 -> pasv -->
              <var n="tense"/> <!-- pri -->
              <lit-tag v="p3.sg"/> <!-- * -> p3.sg -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="ab NN: NN:sta alkaen">
      <pattern>
        <pattern-item n="ab"/>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NumP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUM"/></tag>
              <tag><lit-tag v="ela"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- 12.34 -->
              <clip pos="2" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <lit-tag v="ela"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="alkaen"/>
              <lit-tag v="post"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="bis NN: NN:ään asti">
      <pattern>
        <pattern-item n="bis"/>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NumP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NUM"/></tag>
              <tag><lit-tag v="ela"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- 12.34 -->
              <clip pos="2" side="tl" part="a_num"/>
              <var n="numtype"/>
              <var n="number"/>
              <lit-tag v="ill"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="asti"/>
              <lit-tag v="post"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- }}}
         {{{ actual rules for real phrases -->
    <rule comment="adp nominal, nominal und nominal: drop case move case to last N of NP">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="nominal"/>
        <pattern-item n="comma"/>
        <pattern-item n="nominal"/>
        <pattern-item n="cnjcoo"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="6"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="4"/>
            <lu>
              <clip pos="5" side="tl" part="whole"/>
            </lu>
            <b pos="5"/>
            <lu>
              <clip pos="6" side="tl" part="lem"/>
              <clip pos="6" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp nominal nominal nominal: drop case move case to last N of NP">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="nominal"/>
        <pattern-item n="nominal"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <lit-tag v="nom"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nominal"/>
              <var n="number"/>
              <lit-tag v="nom"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp det nouns nouns: drop case, det, move case to last N of
      compound(?) NP">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="det"/>
        <pattern-item n="nominal"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nominal"/>
              <clip pos="3" side="tl" part="a_number"/>
              <lit-tag v="nom"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_nominal"/>
              <clip pos="4" side="tl" part="a_number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp det adj nouns: drop case, det, move case">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="det"/>
        <pattern-item n="adj"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="4"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <clip pos="4" side="tl" part="a_number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_nominal"/>
              <clip pos="4" side="tl" part="a_number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp cmp nominal: drop case move case to last N of NP">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="cmp"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <lit-tag v="gen"/>
            </lu>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp nominal nominal: drop case move case to last N of NP">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="nominal"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <lit-tag v="nom"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp det nouns: drop case, det, move case">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="det"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adpmaybe"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="als adj noun: is essive">
      <pattern>
        <pattern-item n="als"/>
        <pattern-item n="adj"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="comparison-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><lit-tag v="ESS"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <lit-tag v="ess"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/> <!-- Text -> teksti -->
              <clip pos="3" side="tl" part="a_noun"/> <!-- n -->
              <var n="number"/> <!-- pl/sg -->
              <lit-tag v="ess"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="dets adjs nouns: share case and pl">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="adj"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="number"/></tag>
              <tag><var n="case"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="pps nouns: share case and pl">
      <pattern>
        <pattern-item n="participle"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="number"/></tag>
              <tag><var n="case"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit v="+tu"/>
              <lit-tag v="adj.pos"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adjs comp nouns: share case and pl">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="cmp"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="compstuff-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="number"/></tag>
              <tag><var n="case"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="compstuff"/>
            </lu>
            <!-- recomp -->
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adjs nouns: share case and pl">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="NP"/></tag>
              <tag><var n="number"/></tag>
              <tag><var n="case"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="nouns haver: adessive structurise!">
      <pattern>
        <pattern-item n="nominal"/>
        <pattern-item n="haver"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
              <tag><lit-tag v="ADE"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nominal"/>
              <clip pos="1" side="tl" part="a_number"/>
              <lit-tag v="ade"/>
          </lu>
          <b/>
          <lu>
            <clip pos="2" side="tl" part="lem"/> <!-- olla -->
            <clip pos="2" side="tl" part="a_verb"/> <!-- vaux -->
            <lit-tag v="actv"/> <!-- actv -->
            <var n="tense"/> <!-- pri, past -->
            <lit-tag v="p3.sg"/> <!-- p3.sg -->
          </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="perfect verbs: re-order, and re-perfect">
      <pattern>
        <pattern-item n="perfection"/>
        <pattern-item n="haver"/>
      </pattern>
      <action>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="PERF"/></tag>
            </tags>
            <lu>
              <lit v="olla"/>     <!-- haben -> olla -->
              <lit-tag v="vaux"/> <!-- vbhaver -> vaux -->
              <lit-tag v="actv"/> <!-- 0 -> actv -->
              <var n="tense"/> <!-- pres/past -->
              <var n="pers"/> <!-- p3 -->
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- gehen -> tehdä -->
              <clip pos="1" side="tl" part="a_verb"/> <!-- vblex/vaux... -->
              <lit-tag v="actv"/> <!-- 0 -> actv -->
              <clip pos="1" side="tl" part="a_perf"/> <!-- pp -> pp -->
              <lit-tag v="pos.nom"/> <!-- extra junk -->
              <var n="number"/>   <!-- sg/pl from main verb-->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="als noun: is essive">
      <pattern>
        <pattern-item n="als"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
              <tag><lit-tag v="ESS"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/> <!-- Text -> teksti -->
              <clip pos="2" side="tl" part="a_noun"/> <!-- n -->
              <var n="number"/> <!-- pl/sg -->
              <lit-tag v="ess"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="pp werden: passive construction, kill aux and passivise">
      <pattern>
        <pattern-item n="perfection"/>
        <pattern-item n="werden"/>
      </pattern>
      <action>
        <call-macro n="infinite-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="AUX"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- gehen -> tehdä -->
              <clip pos="1" side="tl" part="a_verb"/> <!-- vblex -->
              <lit-tag v="pasv"/> <!-- 0 -> pasv -->
              <var n="tense"/> <!-- pri -->
              <lit-tag v="impers"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="aux verbs: re-order, and distribute, persons">
      <pattern>
        <pattern-item n="infinite"/>
        <pattern-item n="auxiliary"/>
      </pattern>
      <action>
        <call-macro n="infinite-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="AUX"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lem"/>     <!-- mögen -> haluta -->
              <clip pos="2" side="tl" part="a_verb"/> <!-- vbmod/aux/... -> vaux -->
              <lit-tag v="actv"/> <!-- 0 -> actv -->
              <var n="tense"/> <!-- pis -->
              <var n="pers"/> <!-- p3.sg -->
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- gehen -> tehdä -->
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="actv"/> <!-- 0 -> actv -->
              <clip pos="1" side="tl" part="a_inf"/>
              <clip pos="1" side="tl" part="a_number"/> <!-- sg -> sg -->
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="verb neg pcp: ei oltu tehty">
      <pattern>
        <pattern-item n="verb"/>
        <pattern-item n="verbnegation"/>
        <pattern-item n="participle"/>
      </pattern>
      <action>
        <call-macro n="tensemood-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="voice-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="NEG"/></tag>
            </tags>
            <lu>
              <lit v="ei"/>
              <lit-tag v="vblex.neg.actv"/>
              <var n="pers"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="pasv"/>
              <var n="tense"/>
              <lit-tag v="impers.conneg"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit v="+tu"/>
              <lit-tag v="adj.pos"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="verb negs: to neg conneg">
      <pattern>
        <pattern-item n="verb"/>
        <pattern-item n="verbnegation"/>
      </pattern>
      <action>
        <call-macro n="tensemood-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="conneg-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="NEG"/></tag>
            </tags>
            <lu>
              <lit v="ei"/>
              <lit-tag v="vblex.neg.actv"/>
              <var n="pers"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="actv"/>
              <var n="tense"/>
              <var n="number"/>
              <lit-tag v="conneg"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="neg verbs: to neg conneg">
      <pattern>
        <pattern-item n="verbnegation"/>
        <pattern-item n="verb"/>
      </pattern>
      <action>
        <call-macro n="tensemood-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conneg-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="NEG"/></tag>
            </tags>
            <lu>
              <lit v="ei"/>
              <lit-tag v="vblex.neg.actv"/>
              <var n="pers"/>
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="actv"/>
              <var n="tense"/>
              <var n="number"/>
              <lit-tag v="conneg"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="dets compnouns: case mangle">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="cmp"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <call-macro n="compstuff-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
          </tags>
          <!-- usually no dets...
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_noun"/>
              <clip pos="1" side="tl" part="a_number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
            <b pos="1"/>
           -->
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="compstuff"/>
            </lu>
            <!-- no space -->
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <clip pos="1" side="tl" part="a_number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="prndem propn: deu fail~prndem is actually det">
      <pattern>
        <pattern-item n="prndem"/>
        <pattern-item n="np"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
              <tag><var n="number"/></tag>
              <tag><var n="case"/></tag>
            </tags>
          <!-- usually no dets...
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_noun"/>
              <clip pos="1" side="tl" part="a_number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
            <b pos="1"/>
           -->
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="dets nouns: case mangle">
      <pattern>
        <pattern-item n="det"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
              <tag><var n="number"/></tag>
              <tag><var n="case"/></tag>
          </tags>
          <!-- usually no dets...
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_noun"/>
              <clip pos="1" side="tl" part="a_number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
            <b pos="1"/>
           -->
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <var n="number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="prn pers: case mangle and drop mfs">
      <pattern>
        <pattern-item n="prnpers"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="PRNP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PRN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="a_number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp nominal und nominal: drop case distribute case">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="nominal"/>
        <pattern-item n="cnjcoo"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <var n="adpmaybe"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lem"/>
              <clip pos="4" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp nominal: drop case move case">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <var n="adpmaybe"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="adpcase"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="possess nominals: possessive suffix">
      <pattern>
        <pattern-item n="poss"/>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="possessive-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
              <tag><lit-tag v="POSS"/></tag>
            </tags>
            <lu>
              <var n="prnmaybe"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <var n="number"/>
              <var n="case"/>
              <var n="possess"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="numeral multiplier plural: partitive or stuff">
      <pattern>
        <pattern-item n="cardinal"/>
        <pattern-item n="multiplier"/>
        <pattern-item n="plural"/>
      </pattern>
      <action>
        <call-macro n="numtype-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="MeasureP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="CountXP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_num"/>
              <lit-tag v="card.sg.nom"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <lit-tag v="num.card.sg.par"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <lit-tag v="sg.par"/> <!-- either agree or sg.par -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="numeral plural: partitive or stuff">
      <pattern>
        <pattern-item n="cardinal"/>
        <pattern-item n="plural"/>
      </pattern>
      <action>
        <call-macro n="numtype-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="MeasureP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="CountP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_num"/>
              <var n="numtype"/>
              <lit-tag v="sg.nom"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <lit-tag v="sg.par"/> <!-- either agree or sg.par -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adp numeral: add case and number">
      <pattern>
        <pattern-item n="adp"/>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="adp-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="numtype-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="NumP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="NumP"/></tag>
                <tag><var n="adpcase"/></tag>
            </tags>
            <lu>
              <var n="adpmaybe"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_num"/>
              <var n="numtype"/>
              <lit-tag v="sg"/>
              <var n="adpcase"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!--}}}
         {{{ single word units last resorts -->
    <rule comment="noun compounds: recompound">
      <pattern>
        <pattern-item n="cmp"/>
        <pattern-item n="cmp"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="N" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N.CMP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nominal"/>
              <clip pos="1" side="tl" part="a_number"/>
              <lit-tag v="gen"/>
            </lu>
              <!-- no blank -->
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_nominal"/>
              <clip pos="2" side="tl" part="a_number"/>
              <lit-tag v="gen"/>
            </lu>
              <!-- no blank -->
            <lu>
              <clip pos="3" side="tl" part="lem"/>
              <clip pos="3" side="tl" part="a_noun"/>
              <clip pos="3" side="tl" part="a_number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="noun compounds: recompound">
      <pattern>
        <pattern-item n="cmp"/>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="compstuff-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="case-mangler">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="N" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N.CMP"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nominal"/>
              <var n="compstuff"/>
            </lu>
              <!-- no blank -->
            <lu>
              <clip pos="2" side="tl" part="lem"/>
              <clip pos="2" side="tl" part="a_noun"/>
              <clip pos="2" side="tl" part="a_number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="nouns: case mangle">
      <pattern>
        <pattern-item n="noun"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="NP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N.FOOFOO"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_noun"/>
              <clip pos="1" side="tl" part="a_number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adjs: add case">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="AP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="A"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <var n="comparison"/>
              <!-- <lit-tag v="pos"/>-->
              <var n="number"/>
              <lit-tag v="nom"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="prns: case mangle, determine number">
      <pattern>
        <pattern-item n="prn"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="PrnP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PRN"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <var n="number"/>
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="nums: add case, drop pl to sg">
      <pattern>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="numtype-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="NumP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Num"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_num"/>
              <var n="numtype"/>
              <lit-tag v="sg.nom"/> <!-- deu nums are unnecessarily pl too -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="adps: drop case">
      <pattern>
        <pattern-item n="adp"/>
      </pattern>
      <action>
        <out>
          <chunk name="AdpP" case="caseFirstWord">
            <tags>
                <tag><lit-tag v="Adp"/></tag>
                <tag><clip pos="1" side="sl" part="a_case"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_adp"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stray negs: just say no">
      <pattern>
        <pattern-item n="verbnegation"/>
      </pattern>
      <action>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="NEG"/></tag>
            </tags>
            <lu>
              <lit v="ei"/>
              <lit-tag v="vblex.neg.actv.p3.sg"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stray possessives: ugly genitives">
      <pattern>
        <pattern-item n="poss"/>
      </pattern>
      <action>
        <out>
          <chunk name="PossP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Poss"/></tag>
          </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="a_number"/>
              <lit-tag v="gen"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stranded articles: don't want">
      <pattern>
        <pattern-item n="art"/>
      </pattern>
      <action>
        <out>
          <chunk name="ArtP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="ART"/></tag>
            </tags>
            <!--
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_nominal"/>
              <clip pos="1" side="tl" part="a_number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
            <b pos="1"/>
            -->
          <b/>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stranded dets: just show them">
      <pattern>
        <pattern-item n="det"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="number-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="DetP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="Det"/></tag>
          </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_det"/>
              <clip pos="1" side="tl" part="a_number"/>
              <clip pos="1" side="tl" part="a_case"/>
            </lu>
            <b pos="1"/>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="lost perfect verbs: maybe predicative adj">
      <pattern>
        <pattern-item n="perfection"/>
      </pattern>
      <action>
        <call-macro n="tensemood-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="PERF"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- gehen -> tehdä -->
              <clip pos="1" side="tl" part="a_verb"/> <!-- vblex -->
              <lit-tag v="pasv"/> <!-- 0 -> pasv -->
              <clip pos="1" side="tl" part="a_perf"/> <!-- pp -> pp -->
              <lit-tag v="pos.nom.sg"/> <!-- if no other information -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="lonely infinitive: map infs and gers">
      <pattern>
        <pattern-item n="infinite"/>
      </pattern>
      <action>
        <call-macro n="infinite-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
              <tag><lit-tag v="INF"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/> <!-- gehen -> tehdä -->
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="actv"/> <!-- 0 -> actv -->
              <clip pos="1" side="tl" part="a_inf"/>
              <clip pos="1" side="tl" part="a_number"/> <!-- sg -> sg -->
              <var n="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="verbs: add activ passif, change past tags">
      <pattern>
        <pattern-item n="verb"/>
      </pattern>
      <action>
        <call-macro n="tensemood-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="pers-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="VP" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="actv"/>
              <var n="tense"/> <!-- pri past -->
              <var n="pers"/> <!-- p123.sgpl -->
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <!-- }}} -->
  </section-rules>
</transfer>

<!-- vim: set foldmethod=marker: -->
